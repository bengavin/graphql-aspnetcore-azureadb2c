# Securing ASP.NET Core GraphQL API with Azure Active Directory B2C
#
# Build Script
# 
# Basic Flow
# - Build API Package
# - Test Environment
#   - Ensure Environment State
#   - Deploy API to environment
# - Stage Environment
#   - Ensure Environment State
#   - Deploy API to environment
# ... production ... eventually ...

trigger:
- part-4-bicep
- main

pool:
  vmImage: ubuntu-latest

# NOTE: This is a workaround for service connections not supporting variable replacement
#       at runtime (see: https://developercommunity.visualstudio.com/t/using-a-variable-for-the-service-connection-result/676259)
parameters:
- name: TestEnvironmentServiceConnection
  default: $(Deployment.Subscription.Test)
  type: string
- name: StageEnvironmentServiceConnection
  default: $(Deployment.Subscription.Stage)
  type: string

stages:
- stage: BuildApiStage
  displayName: Build API
  jobs:
    - job: BuildApiJob
      displayName: Build Api
      steps:
        - task: DotNetCoreCLI@2
          displayName: dotnet build
          inputs:
            command: 'build'
            projects: 'api/StarWars.API.csproj'

        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            projects: 'api/StarWars.API.csproj'
            arguments: '--output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true

        - task: PublishPipelineArtifact@1
          displayName: Publish API package to pipeline
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/api.zip'
            artifact: 'ApiPackage'
            publishLocation: 'pipeline'

- stage: TestEnvironmentStage
  displayName: Test Environment
  dependsOn: BuildApiStage
  variables: 
    - group: securegqldemo - Test
  jobs:
    - template: "azure-pipelines-deploy-stage.yaml"
      parameters:
        serviceConnection: ${{ parameters.TestEnvironmentServiceConnection }}
        environment: Test

- stage: StageEnvironmentStage
  displayName: Stage Environment
  dependsOn: TestEnvironmentStage
  variables: 
    - group: securegqldemo - Stage
  jobs:
    - template: "azure-pipelines-deploy-stage.yaml"
      parameters:
        serviceConnection: ${{ parameters.StageEnvironmentServiceConnection }}
        environment: Stage
