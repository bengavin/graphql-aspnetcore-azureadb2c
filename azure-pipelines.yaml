# Securing ASP.NET Core GraphQL API with Azure Active Directory B2C
#
# Build Script
# 
# Basic Flow
# - Build API Package
# - Test Environment
#   - Ensure Environment State
#   - Deploy API to environment
# - Stage Environment
#   - Ensure Environment State
#   - Deploy API to environment
# ... production ... eventually ...

trigger:
- main

pool:
  vmImage: ubuntu-latest

# NOTE: This is a workaround for service connections not supporting variable replacement
#       at runtime (see: https://developercommunity.visualstudio.com/t/using-a-variable-for-the-service-connection-result/676259)
parameters:
- name: TestEnvironmentServiceConnection
  default: $(Deployment.Subscription.Test)
  type: string
- name: StageEnvironmentServiceConnection
  default: $(Deployment.Subscription.Stage)
  type: string

stages:
- stage: BuildApiStage
  displayName: Build API
  jobs:
    - job: BuildApiJob
      displayName: Build Api
      steps:
        - task: DotNetCoreCLI@2
          displayName: dotnet build
          inputs:
            command: 'build'
            projects: 'api/StarWars.API.csproj'

        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            projects: 'api/StarWars.API.csproj'
            arguments: '--output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true

        - task: PublishPipelineArtifact@1
          displayName: Publish API package to pipeline
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/api.zip'
            artifact: 'ApiPackage'
            publishLocation: 'pipeline'

- stage: TestEnvironmentStage
  displayName: Test Environment
  dependsOn: BuildApiStage
  variables: 
    - group: securegqldemo - Test
  jobs:
    - job: DeployTestEnvironmentJob
      displayName: Deploy test environment
      steps:
      - task: AzureCLI@2
        displayName: Deploy Bicep template
        inputs:
          azureSubscription: ${{ parameters.TestEnvironmentServiceConnection }}
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'az deployment sub create --location $(Deployment.Metadata.Location) --template-file playbook.bicep --parameters vars/playbook.parameters.json vars/playbook.parameters.$(Deployment.Environment).json'
          workingDirectory: 'infrastructure'

      - task: AzureCLI@2
        displayName: Obtain Publish Password
        enabled: false
        inputs:
          azureSubscription: ${{ parameters.TestEnvironmentServiceConnection }}
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            set deployPass = `az webapp deployment list-publishing-profiles --name app-$(Deployment.Environment)-$(Deployment.Application)-api --resource-group rg-$(Deployment.Environment)-$(Deployment.Application) --query '[].userPWD' -o tsv`
            echo '##vso[task.setvariable variable=Deployment.Password;issecret=true]${deployPass}'
          workingDirectory: 'infrastructure'
      
      - task: DownloadBuildArtifacts@0
        displayName: Download API Package
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'ApiPackage'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: AzureRmWebAppDeployment@4
        displayName: Publish API Package - Test
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: ${{ parameters.TestEnvironmentServiceConnection }}
          appType: 'webAppLinux'
          WebAppName: 'app-$(Deployment.Environment)-$(Deployment.Application)'
          packageForLinux: '$(System.ArtifactsDirectory)/api.zip'
